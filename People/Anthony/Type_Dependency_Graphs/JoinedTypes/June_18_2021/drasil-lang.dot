digraph drasillang {


subgraph conceptchunk {
	/* relationships between independent and dependent components */
	ConceptChunk -> IdeaDict;
    ConceptChunk -> Desc;
    ConceptChunk -> Domain;
    
	/* definitions for each type component */
	ConceptChunk 	    [shape=oval, color=cyan3, label="ConceptChunk"];
    //ConceptChunkDesc    [shape=oval, color=cyan3, label="Description (Sentence)"];
    //ConceptChunkDomain  [shape=oval, color=cyan3, label="Domain ([UID])"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph commonconcept {
	/* relationships between independent and dependent components */
	CommonConcept -> CI;
    CommonConcept -> Desc;
    
	/* definitions for each type component */
	CommonConcept 	    [shape=oval, color=cyan3, label="CommonConcept"];
    //CommonConceptDesc    [shape=oval, color=cyan3, label="Description (Sentence)"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph conceptinstance {
	/* relationships between independent and dependent components */
	ConceptInstance -> ConceptChunk;
    ConceptInstance -> RefAdd;
    ConceptInstance -> ShortName;
    
	/* definitions for each type component */
	ConceptInstance 	    [shape=oval, color=cyan3, label="ConceptInstance"];
    //ConceptInstanceRefAdd   [shape=oval, color=cyan3, label="Reference Address (String)"];
    //ConceptInstanceShortName  [shape=oval, color=cyan3, label="ShortName"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph citation {
	/* relationships between independent and dependent components */
	Citation -> CitationKind;
    Citation -> CiteField;
    Citation -> UID;
    Citation -> ShortName;
    
	/* definitions for each type component */
	Citation 	    [shape=oval, color=cyan3, label="Citation"];
    //CiteFields    [shape=oval, color=cyan3, label="CiteFields"];
    //CitationUID  [shape=oval, color=cyan3, label="UID"];
    //CitationShortName  [shape=oval, color=cyan3, label="ShortName"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph ci {
	/* relationships between independent and dependent components */
	CI -> UID;
    CI -> NP;
    CI -> Desc;
    CI -> Domain;
    
	/* definitions for each type component */
	CI 	    [shape=oval, color=cyan3, label="CI"];
    /*CIUID [shape=oval, color=cyan3, label="UID"];
    CINP [shape=oval, color=cyan3, label="Term (NP)"];
    CIDesc  [shape=oval, color=cyan3, label="Description (Sentence)"];
    CIDomain [shape=oval, color=cyan3, label="Domain ([UID])"];*/

}

/* dot -Tpng sample.dot -o sample.png */

subgraph constrainedchunk {
	/* relationships between independent and dependent components */
	ConstrainedChunk -> QuantityDict;
    ConstrainedChunk -> Constraint;
    ConstrainedChunk -> Expr [style="dotted"];
    
	/* definitions for each type component */
	ConstrainedChunk 	    [shape=oval, color=cyan3, label="ConstrainedChunk"];
    //ConstrainedChunkConstraints    [shape=oval, color=cyan3, label="[Constraint]"];
    //ConstrainedChunkMaybeExpr  [shape=oval, color=cyan3, label="Maybe Expr"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph constrconcept {
	/* relationships between independent and dependent components */
	ConstrConcept -> QuantityDict;
    ConstrConcept -> Constraint;
    ConstrConcept -> Expr [style="dotted"];
    
	/* definitions for each type component */
	ConstrConcept 	    [shape=oval, color=cyan3, label="ConstrConcept"];
    //ConstrConceptConstraints    [shape=oval, color=cyan3, label="[Constraint]"];
    //ConstrConceptMaybeExpr  [shape=oval, color=cyan3, label="Maybe Expr"];

}

/* dot -Tpng sample.dot -o sample.png */


subgraph definedquantitydict {
	/* relationships between independent and dependent components */
	DefinedQuantityDict -> ConceptChunk;
    DefinedQuantityDict -> StageSymbol;
    DefinedQuantityDict -> Space;
    DefinedQuantityDict -> UnitDefn [style="dotted"];
    
	/* definitions for each type component */
	DefinedQuantityDict 	    [shape=oval, color=cyan3, label="DefinedQuantityDict"];
    //DefinedQuantityDictStageSymbol    [shape=oval, color=cyan3, label="Stage Symbol"];
    //DefinedQuantityDictSpace  [shape=oval, color=cyan3, label="Space"];
    //DefinedQuantityDictMaybeUnitDefn  [shape=oval, color=cyan3, label="Maybe UnitDefn"];

}

/* dot -Tpng sample.dot -o sample.png */
subgraph qdefinition {
	/* relationships between independent and dependent components */
	QDefinition -> QuantityDict;
    QDefinition -> Desc;
    QDefinition -> Expr;
    QDefinition -> Domain;
    
	/* definitions for each type component */
	QDefinition 	    [shape=oval, color=cyan3, label="QDefinition"];
    //QDefinitionDesc    [shape=oval, color=cyan3, label="Description (Sentence)"];
    //QDefinitionExpr  [shape=oval, color=cyan3, label="Expr"];
    //QDefinitionDomain  [shape=oval, color=cyan3, label="Domain ([UID])"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph namedargument {
	/* relationships between independent and dependent components */
	NamedArgument -> QuantityDict;
    
	/* definitions for each type component */
	NamedArgument 	    [shape=oval, color=cyan3, label="NamedArgument"];

}

/* dot -Tpng sample.dot -o sample.png */
subgraph namedchunk {
	/* relationships between independent and dependent components */
	NamedChunk -> UID;
    NamedChunk -> NP;
    
	/* definitions for each type component */
	NamedChunk 	    [shape=oval, color=cyan3, label="NamedChunk"];
    //NamedChunkNP   [shape=oval, color=cyan3, label="Term (NP)"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph uid {
    
	/* definitions for each type component */
	UID 	    [shape=oval, color=cyan3, label="Unique Identifier (UID)"];
	Domain      [shape=oval, color=cyan3, label="Domain ([UID])"];

}

/* dot -Tpng sample.dot -o sample.png */
subgraph ideadict {
	/* relationships between independent and dependent components */
	IdeaDict -> NamedChunk;
    IdeaDict -> IdeaDictAbbrev;
    
	/* definitions for each type component */
	IdeaDict 	    [shape=oval, color=cyan3, label="IdeaDict"];
    IdeaDictAbbrev  [shape=oval, color=cyan3, label="Abbreviation (Maybe String)"];

}

/* dot -Tpng sample.dot -o sample.png */
subgraph quantitydict {
	/* relationships between independent and dependent components */
	QuantityDict -> IdeaDict;
    QuantityDict -> Space;
    QuantityDict -> StageSymbol;
    QuantityDict -> UnitDefn [style="dotted"];
    
	/* definitions for each type component */
	QuantityDict 	    [shape=oval, color=cyan3, label="QuantityDict"];
    //QuantityDictSpace    [shape=oval, color=cyan3, label="Space"];
    //QuantityDictStageSymbol  [shape=oval, color=cyan3, label="Stage Symbol"];
    //QuantityDictMaybeUnitDefn  [shape=oval, color=cyan3, label="Maybe UnitDefn"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph relationconcept {
	/* relationships between independent and dependent components */
	RelationConcept -> ConceptChunk;
    RelationConcept -> Relation;
	Relation -> Expr;
    
	/* definitions for each type component */
	RelationConcept 	    [shape=oval, color=cyan3, label="RelationConcept"];
    Relation               [shape=oval, color=cyan3, label="Synonym for Expr"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph uncertainchunk {
	/* relationships between independent and dependent components */
	UncertainChunk -> ConstrainedChunk;
    UncertainChunk -> Uncertainty;
    
	/* definitions for each type component */
	UncertainChunk 	    [shape=oval, color=cyan3, label="UncertainChunk"];
    //ConstrainedChunkUncertainty    [shape=oval, color=cyan3, label="Uncertainty"];

}

/* dot -Tpng sample.dot -o sample.png */
subgraph uncertq {
	/* relationships between independent and dependent components */
	UncertQ -> ConstrainedChunk;
    UncertQ -> Uncertainty;
    
	/* definitions for each type component */
	UncertQ 	    [shape=oval, color=cyan3, label="UncertQ"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph unitdefn {
	/* relationships between independent and dependent components */
	UnitDefn -> ConceptChunk;
    UnitDefn -> UnitSymbol;
    UnitDefn -> Domain;
    
	/* definitions for each type component */
	UnitDefn 	    [shape=oval, color=cyan3, label="UnitDefn"];
    //UnitDefnDomain  [shape=oval, color=cyan3, label="Domain ([UID])"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph unitequation {
	/* relationships between independent and dependent components */
	UnitEquation -> USymb;
    UnitEquation -> Domain;
    
	/* definitions for each type component */
	UnitEquation 	    [shape=oval, color=cyan3, label="UnitEquation"];
    //UnitEquationDomain    [shape=oval, color=cyan3, label="Domain ([UID])"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph unitalchunk {
	/* relationships between independent and dependent components */
	UnitalChunk -> DefinedQuantityDict;
    UnitalChunk -> UnitDefn;
    
	/* definitions for each type component */
	UnitalChunk 	    [shape=oval, color=cyan3, label="UnitalChunk"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph unitarychunk {
	/* relationships between independent and dependent components */
	UnitaryChunk -> QuantityDict;
    UnitaryChunk -> UnitDefn;
    
	/* definitions for each type component */
	UnitaryChunk 	    [shape=oval, color=cyan3, label="UnitaryChunk"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph unitaryconceptdict {
	/* relationships between independent and dependent components */
	UnitaryConceptDict -> UnitaryChunk;
    UnitaryConceptDict -> Desc;
    UnitaryConceptDict -> Domain;
    
	/* definitions for each type component */
	UnitaryConceptDict 	    [shape=oval, color=cyan3, label="UnitaryConceptDict"];
    //UnitaryConceptDictDesc    [shape=oval, color=cyan3, label="Description (Sentence)"];
    //UnitaryConceptDictDomain  [shape=oval, color=cyan3, label="Domain ([UID])"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph citefield {
	/* definitions for each type component */
	CiteField 	    [shape=oval, color=cyan3, label="Fields used in citations (CiteField)"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph hp {
    
	/* definitions for each type component */
	HP 	    [shape=oval, color=cyan3, label="Method of Publishing (HP)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph citationkind {
	/* definitions for each type component */
	CitationKind 	    [shape=oval, color=cyan3, label="Kind of citation (Article, Book, etc.)"];

}

/* dot -Tpng sample.dot -o sample.png */

subgraph month {
    /* definitions for each type component */
    Month [shape=oval, color=cyan3, label="Month"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph listtype {
    ListType -> ItemType [style="dotted"];
    /* definitions for each type component */
	ListType 	    [shape=oval, color=cyan3, label="For Different Kinds of Lists (ListType)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph itemtype {
    /* definitions for each type component */
	ItemType 	    [shape=oval, color=cyan3, label="Item/Kind of Element in a List (ItemType)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph contents {

    Contents -> UnlabelledContent [style="dotted"];
    Contents -> LabelledContent [style="dotted"];

    /* definitions for each type component */
	Contents 	    [shape=oval, color=cyan3, label="Contents"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph dtype {
    /* definitions for each type component */
	DType 	    [shape=oval, color=cyan3, label="Type of Definition or Model (DType)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph rawcontent {

    RawContent -> ListType [style="dotted"];
    RawContent -> DisplayExpr [style="dotted"];

    /* definitions for each type component */
	RawContent 	    [shape=oval, color=cyan3, label="RawContent"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph labelledcontent {

    LabelledContent -> Reference;
    LabelledContent -> RawContent;

    /* definitions for each type component */
	LabelledContent 	    [shape=oval, color=cyan3, label="LabelledContent"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph unlabelledcontent {

    UnlabelledContent -> RawContent;

    /* definitions for each type component */
	UnlabelledContent 	    [shape=oval, color=cyan3, label="UnlabelledContent"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph lbltype {

    LblType -> IRefProg [style="dotted"];

    /* definitions for each type component */
	LblType 	    [shape=oval, color=cyan3, label="Labels for Referencing (LblType)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph irefprog {

    IRefProg -> IRefProg [style="dotted"];

    /* definitions for each type component */
	IRefProg 	    [shape=oval, color=cyan3, label="Names of References (IRefProg)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph capitalizationrule {
    /* definitions for each type component */
	CapitalizationRule 	    [shape=oval, color=cyan3, label="CapitalizationRule"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph pluralrule {
    /* definitions for each type component */
	PluralRule 	    [shape=oval, color=cyan3, label="PluralRule"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph np {

    NP -> PluralRule [style="dotted"];
    NP -> CapitalizationRule [style="dotted"];
    
    /* definitions for each type component */
	NP 	    [shape=oval, color=cyan3, label="Noun Phrase (NP)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph uri {

    URI -> Scheme [style="dotted"];
    URI -> Authority [style="dotted"];


    /* definitions for each type component */
	URI 	    [shape=oval, color=cyan3, label="Uniform Resource Identifier (URI)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph scheme {
    /* definitions for each type component */
	Scheme 	    [shape=oval, color=cyan3, label="Connection Type (Scheme)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph authority {

    Authority -> Port [style="dotted"];

    /* definitions for each type component */
	Authority 	    [shape=oval, color=cyan3, label="Authentication (Authority)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph port {
    /* definitions for each type component */
	Port 	    [shape=oval, color=cyan3, label="Authentication Port (Port)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph uncertainty {

    Uncertainty -> Int [style="dotted"];
    Uncertainty -> Double [style="dotted"];

    /* definitions for each type component */
	Uncertainty 	    [shape=oval, color=cyan3, label="Uncertainty"];
    //MaybeInt 	    [shape=oval, color=black, label="Maybe Int"];
    //MaybeDouble 	    [shape=oval, color=black, label="Maybe Double"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph constraintreason {
    /* definitions for each type component */
	ConstraintReason 	    [shape=oval, color=cyan3, label="Constraints on a model (ConstraintReason)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph constraint {

    Constraint -> RealInterval [style="dotted"];
    Constraint -> ConstraintReason [style="dotted"];

    /* definitions for each type component */
	Constraint 	    [shape=oval, color=cyan3, label="Constraint"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph derivation {
    /* definitions for each type component */
	Derivation 	    [shape=oval, color=cyan3, label="A Statement and Explination (Derivation)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph displaybinop {
    /* definitions for each type component */
	DisplayBinOp 	    [shape=oval, color=cyan3, label="DisplayBinOp"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph displayassocbinop {
    /* definitions for each type component */
	DisplayAssocBinOp 	    [shape=oval, color=cyan3, label="DisplayAssocBinOp"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph displayexpr {

    DisplayExpr -> Expr [style="dotted"];
    DisplayExpr -> DisplayBinOp [style="dotted"];
    DisplayExpr -> DisplayAssocBinOp [style="dotted"];

    /* definitions for each type component */
	DisplayExpr 	    [shape=oval, color=cyan3, label="DisplayExpr"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph expr {
    Expr -> Double [style="dotted"];
    Expr -> Integer [style="dotted"];
    Expr -> String [style="dotted"];
    Expr -> Expr [style="dotted"];
    Expr -> AssocArithOper [style="dotted"];
    Expr -> AssocBoolOper [style="dotted"];
    Expr -> DerivType [style="dotted"];
    Expr -> UID [style="dotted"];
    Expr -> ArithBinOp [style="dotted"];
    Expr -> EqBinOp [style="dotted"];
    Expr -> BoolBinOp [style="dotted"];
    Expr -> LABinOp [style="dotted"];
    Expr -> OrdBinOp [style="dotted"];
    Expr -> VVVBinOp [style="dotted"];
    Expr -> VVNBinOp [style="dotted"];
    Expr -> UFunc [style="dotted"];
    Expr -> UFuncB [style="dotted"];
    Expr -> UFuncVec [style="dotted"];
    Expr -> Completeness [style="dotted"];
    Expr -> DomainDesc [style="dotted"];


    /* definitions for each type component */
	Expr 	    [shape=oval, color=cyan3, label="Expr"];
    ArithBinOp 	    [shape=oval, color=cyan3, label="ArithBinOp"];
    EqBinOp 	    [shape=oval, color=cyan3, label="EqBinOp"];
    BoolBinOp 	    [shape=oval, color=cyan3, label="BoolBinOp"];
    LABinOp 	    [shape=oval, color=cyan3, label="LABinOp"];
    OrdBinOp 	    [shape=oval, color=cyan3, label="OrdBinOp"];
    VVVBinOp 	    [shape=oval, color=cyan3, label="VVVBinOp"];
    VVNBinOp 	    [shape=oval, color=cyan3, label="VVNBinOp"];
    AssocArithOper 	    [shape=oval, color=cyan3, label="AssocArithOper"];
    AssocBoolOper 	    [shape=oval, color=cyan3, label="AssocBoolOper"];
    UFunc 	    [shape=oval, color=cyan3, label="UFunc"];
    UFuncB 	    [shape=oval, color=cyan3, label="UFuncB"];
    UFuncVec 	    [shape=oval, color=cyan3, label="UFuncVec"];
    Completeness 	    [shape=oval, color=cyan3, label="Completeness"];
    DerivType 	    [shape=oval, color=cyan3, label="DerivType"];
    //ExprUID     [shape=oval, color=cyan3, label="UID"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph seccons {

    SecCons -> Section [style="dotted"];
    SecCons -> Contents [style="dotted"];

    /* definitions for each type component */
	SecCons 	    [shape=oval, color=cyan3, label="Section Content (SecCons)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph section {
    
    Section -> Reference;
    Section -> SecCons;

    /* definitions for each type component */
	Section 	    [shape=oval, color=cyan3, label="Section"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph document {

    Document -> Section;
    Document -> Person;

    /* definitions for each type component */
	Document 	    [shape=oval, color=cyan3, label="Document"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph person {

    Person -> String;
    Person -> Conv;

    /* definitions for each type component */
	Person 	    [shape=oval, color=cyan3, label="Person (usually the author)"];
    Conv [shape=oval, color=cyan3, label="Naming Layout"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph refinfo {
    /* definitions for each type component */
	RefInfo 	    [shape=oval, color=cyan3, label="Reference Information (RefInfo)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph reference {

    Reference -> UID;
    Reference -> LblType;
    Reference -> ShortName;
    Reference -> RefInfo;

    /* definitions for each type component */
	Reference 	    [shape=oval, color=cyan3, label="Reference"];
    //ReferenceUID	    [shape=oval, color=cyan3, label="UID"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph sentence {

    Sentence -> SentenceStyle [style="dotted"];
    Sentence -> USymb [style="dotted"];
    Sentence -> String [style="dotted"];
    Sentence -> Symbol [style="dotted"];
    Sentence -> DisplayExpr [style="dotted"];
    Sentence -> RefInfo [style="dotted"];
    Sentence -> Sentence [style="dotted"];


    /* definitions for each type component */
	Sentence 	    [shape=oval, color=cyan3, label="Sentence"];
	SentenceStyle	    [shape=oval, color=cyan3, label="SentenceStyle"];
    Desc                [shape=oval, color=cyan3, label="Description (Sentence)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph shortname {

    ShortName -> Sentence;
    
    /* definitions for each type component */
	ShortName 	    [shape=oval, color=cyan3, label="ShortName"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph space {
    /* definitions for each type component */
	Space 	    [shape=oval, color=cyan3, label="Space"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph domaindesc {

    DomainDesc -> Symbol [style="dotted"];
    DomainDesc -> RTopology [style="dotted"];


    /* definitions for each type component */
	DomainDesc 	    [shape=oval, color=cyan3, label="DomainDesc"];
    RTopology 	    [shape=oval, color=cyan3, label="RTopology"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph realinterval {

    RealInterval -> Inclusive;

    /* definitions for each type component */
	RealInterval 	    [shape=oval, color=cyan3, label="RealInterval"];
    Inclusive 	    [shape=oval, color=cyan3, label="Bounds on an interval (Inclusive)"];
}

/* dot -Tpng sample.dot -o sample.png */

subgraph unitsymbol {

    UDefn -> USymb;
    UnitSymbol -> USymb;
    /* definitions for each type component */
	UDefn 	    [shape=oval, color=cyan3, label="Relative Units (UDefn)"];
    UnitSymbol 	    [shape=oval, color=cyan3, label="UnitSymbol"];
    USymb 	    [shape=oval, color=cyan3, label="USymb"];
}

/* dot -Tpng sample.dot -o sample.png */

}