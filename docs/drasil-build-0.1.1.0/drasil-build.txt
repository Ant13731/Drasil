-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A framework for code and document generation for scientific software - Build System SubPackage
--   
--   Please see the README on GitHub at
--   <a>https://github.com/JacquesCarette/Drasil#readme</a>
@package drasil-build
@version 0.1.1.0

module Build.Drasil

-- | A command is made up of <a>MakeString</a>s and command operators.
data Command

-- | Dependencies are made up of 0 or more <a>Target</a>s.
type Dependencies = [Target]

-- | Creates a Command which fails the make process if it does not return
--   zero.
mkCheckedCommand :: MakeString -> Command

-- | Creates a command which executes and ignores the return code.
mkCommand :: MakeString -> Command

-- | Creates a Rule which results in a file being created.
mkFile :: Target -> Dependencies -> [Command] -> Rule

-- | Creates an abstract Rule not associated to a specific file.
mkRule :: Target -> Dependencies -> [Command] -> Rule

-- | A Makefile Rule needs a target, dependencies, type, and commands.
data Rule

-- | Members can be transformed into a make rule.
class RuleTransformer c
makeRule :: RuleTransformer c => c -> [Rule]

-- | Concatenates two <a>MakeString</a>s with a space in between.
(+:+) :: MakeString -> MakeString -> MakeString

-- | Constructor for converting a String into a MakeString.
makeS :: String -> MakeString
data MakeString

-- | Constructor for <a>Free</a> variables.
mkFreeVar :: VarName -> MakeString

-- | Constructor for <a>Implicit</a> variables.
mkImplicitVar :: VarName -> MakeString

-- | Constructor for Windows OS variables.
mkWindowsVar :: VarName -> VarVal -> VarVal -> MakeString

-- | Constructor for <tt>OS</tt> variables.
mkOSVar :: VarName -> VarVal -> VarVal -> VarVal -> MakeString

-- | Generates the makefile by calling <a>build</a> after <a>toMake</a>.
genMake :: RuleTransformer c => [c] -> Doc
