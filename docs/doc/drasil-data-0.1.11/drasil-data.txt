-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A framework for code and document generation for scientific software - Data SubPackage
--   
--   A framework for code and document generation for scientific software -
--   Data SubPackage
@package drasil-data
@version 0.1.11

module Data.Drasil.Constraints
gtZeroConstr :: Constraint

module Data.Drasil.People
spencerSmith :: Person
henryFrankis :: Person
nKoothoor :: Person
dParnas :: Person
daAruliah :: Person
gWilson :: Person
cTitus :: Person
kdHuff :: Person
nChueHong :: Person
mDavis :: Person
rGuy :: Person
shdHaddock :: Person
imMitchell :: Person
mdPlumblet :: Person
bWaugh :: Person
epWhite :: Person
pWilson :: Person
pcClements :: Person
luthfi :: Person
alex :: Person
nikitha :: Person
thulasi :: Person
brooks :: Person
mLightstone :: Person
lLai :: Person
pjAgerfalk :: Person
nKraiem :: Person
jRalyte :: Person
jBueche :: Person
fIncropera :: Person
dDewitt :: Person
tBergman :: Person
aLavine :: Person
jRobertson :: Person
sRobertson :: Person
wlBeason :: Person
tlKohutek :: Person
jmBracci :: Person
qhQian :: Person
dyZhu :: Person
cfLee :: Person
grChen :: Person
dgFredlund :: Person
jKrahn :: Person
dStolle :: Person
yCLi :: Person
ymChen :: Person
tltZhan :: Person
ssLing :: Person
pjCleall :: Person
pGuo :: Person
mCampidelli :: Person
dmWiess :: Person
sPalmer :: Person
scottSmith :: Person
bKarchewski :: Person
rHuston :: Person
hJosephs :: Person
nrMorgenstern :: Person
vePrice :: Person
samCrawford :: Person

module Data.Drasil.Citations
campidelli :: Citation
koothoor2013 :: Citation
parnas1972 :: Citation
parnasClements1986 :: Citation
parnasClements1984 :: Citation
smithLai2005 :: Citation
jnlCGJ :: String

module Data.Drasil.Phrase

-- | Creates an NP by combining two <a>NamedIdea</a>s with the word "and"
--   between their terms. Plural is defaulted to <tt>(phrase t1) "of"
--   (plural t2)</tt>
and_ :: (NamedIdea c, NamedIdea d) => c -> d -> NP

-- | Same as <a>and_</a> combinator, except phrase default of second term
--   is plural instead of phrase
and_' :: (NamedIdea c, NamedIdea d) => c -> d -> NP

-- | Customizable <a>and</a> combinator
andRT :: (NamedIdea c, NamedIdea d) => (c -> Sentence) -> (d -> Sentence) -> c -> d -> NP
with :: (NamedIdea c, NamedIdea d) => c -> d -> NP

-- | Creates a noun phrase by combining two <a>NamedIdea</a>s with the word
--   "of" between their terms. Plural is defaulted to <tt>(phrase t1) "of"
--   (plural t2)</tt>
of_ :: (NamedIdea c, NamedIdea d) => c -> d -> NP
ofN_ :: (NamedIdea c, NounPhrase d) => c -> d -> NP

-- | Creates a noun phrase by combining two <a>NamedIdea</a>s with the word
--   "of" between them. <a>phrase</a> is defaulted to <tt>(phrase t1) "of"
--   (plural t2)</tt>. Plural is the same.
of_' :: (NamedIdea c, NamedIdea d) => c -> d -> NP

-- | Same as of_, except plural default of second term is phrase
of_'' :: (NamedIdea c, NamedIdea d) => c -> d -> NP

-- | Same as of_, except phrase default of first term is plural instead of
--   phrase
of__ :: (NamedIdea c, NamedIdea d) => c -> d -> NP

-- | Same as of__, except combining Sentence piece is "of a"
ofA :: (NamedIdea c, NamedIdea d) => c -> d -> NP

-- | Inserts the word "for" between the titleized versions of two terms
for :: (NamedIdea c, NamedIdea d) => c -> d -> Sentence

-- | Similar to <a>for</a>, but uses titleized version of term 1 with the
--   abbreviation (if it exists, phrase otherwise) for term 2
for' :: (NamedIdea c, Idea d) => c -> d -> Sentence

-- | Similar to <a>for</a>, but allows one to specify the function to use
--   on each term before inserting for. For example one could use <tt>for''
--   phrase plural t1 t2</tt>
for'' :: (c -> Sentence) -> (d -> Sentence) -> c -> d -> Sentence
the' :: (NamedIdea t) => t -> NP
the :: (NamedIdea t) => t -> NP
theCustom :: (t -> Sentence) -> t -> NP

-- | Combinator for combining two <a>NamedChunk</a>s into one. <i>Does not
--   preserve abbreviations</i>
compoundNC :: (NamedIdea a, NamedIdea b) => a -> b -> NamedChunk
compoundNC' :: (NamedIdea a, NamedIdea b) => a -> b -> NamedChunk
compoundNC'' :: (NamedIdea a, NamedIdea b) => (NP -> Sentence) -> (NP -> Sentence) -> a -> b -> NamedChunk
compoundNCPlPh :: NamedChunk -> NamedChunk -> NamedChunk
compoundNCPlPl :: NamedChunk -> NamedChunk -> NamedChunk
compoundNC''' :: (NamedIdea a, NamedIdea b) => (NP -> Sentence) -> a -> b -> NamedChunk
compoundNCP1 :: NamedChunk -> NamedChunk -> NamedChunk

module Data.Drasil.Concepts.Math
mathcon :: [ConceptChunk]
mathcon' :: [CI]
angle :: ConceptChunk
area :: ConceptChunk
calculation :: ConceptChunk
diameter :: ConceptChunk
equation :: ConceptChunk
euclidN :: ConceptChunk
euclidSpace :: ConceptChunk
gradient :: ConceptChunk
graph :: ConceptChunk
law :: ConceptChunk
matrix :: ConceptChunk
norm :: ConceptChunk
normal :: ConceptChunk
normalV :: ConceptChunk
number :: ConceptChunk
orient :: ConceptChunk
parameter :: ConceptChunk
perp :: ConceptChunk
perpV :: ConceptChunk
pi_ :: ConceptChunk
probability :: ConceptChunk
shape :: ConceptChunk
surArea :: ConceptChunk
surface :: ConceptChunk
unit_ :: ConceptChunk
unitV :: ConceptChunk
vector :: ConceptChunk
rate :: ConceptChunk
change :: ConceptChunk
rOfChng :: ConceptChunk
constraint :: ConceptChunk
pde :: CI
ode :: CI
de :: CI

module Data.Drasil.Concepts.Documentation
doccon :: [NamedChunk]
doccon' :: [CI]

-- | CI | | uid | term | abbreviation | ConceptDomain
assumption :: CI
desSpec :: CI
goalStmt :: CI
dataConst :: CI
likelyChg :: CI
unlikelyChg :: CI
physSyst :: CI
requirement :: CI
mg :: CI
mis :: CI
notApp :: CI
srs :: CI
typUnc :: CI
sec :: CI
abbreviation :: NamedChunk
analysis :: NamedChunk
appendix :: NamedChunk
aspect :: NamedChunk
body :: NamedChunk
characteristic :: NamedChunk
class_ :: NamedChunk
client :: NamedChunk
code :: NamedChunk
column :: NamedChunk
company :: NamedChunk
component :: NamedChunk
concept :: NamedChunk
condition :: NamedChunk
connection :: NamedChunk
constant :: NamedChunk
constraint :: NamedChunk
consumer :: NamedChunk
content :: NamedChunk
context :: NamedChunk
coordinate :: NamedChunk
customer :: NamedChunk
datum :: NamedChunk
decision :: NamedChunk
definition :: NamedChunk
dependency :: NamedChunk
description :: NamedChunk
design :: NamedChunk
document :: NamedChunk
documentation :: NamedChunk
effect :: NamedChunk
element :: NamedChunk
emphasis :: NamedChunk
endUser :: NamedChunk
environment :: NamedChunk
failure :: NamedChunk
figure :: NamedChunk
first :: NamedChunk
form :: NamedChunk
full :: NamedChunk
functional :: NamedChunk
game :: NamedChunk
general :: NamedChunk
goal :: NamedChunk
guide :: NamedChunk
implementation :: NamedChunk
individual :: NamedChunk
information :: NamedChunk
interest :: NamedChunk
interface :: NamedChunk
input_ :: NamedChunk
instance_ :: NamedChunk
intReader :: NamedChunk
introduction :: NamedChunk
issue :: NamedChunk
item :: NamedChunk
loss :: NamedChunk
label :: NamedChunk
library :: NamedChunk
limitation :: NamedChunk
literacy :: NamedChunk
material_ :: NamedChunk
message :: NamedChunk
method_ :: NamedChunk
module_ :: NamedChunk
model :: NamedChunk
name_ :: NamedChunk
nonfunctional :: NamedChunk
object :: NamedChunk
offShelf :: NamedChunk
open :: NamedChunk
organization :: NamedChunk
output_ :: NamedChunk
physics :: NamedChunk
physical :: NamedChunk
plan :: NamedChunk
practice :: NamedChunk
priority :: NamedChunk
problem :: NamedChunk
product_ :: NamedChunk
project :: NamedChunk
property :: NamedChunk
purpose :: NamedChunk
quantity :: NamedChunk
realtime :: NamedChunk
reference :: NamedChunk
requirement_ :: NamedChunk
response :: NamedChunk
result :: NamedChunk
reviewer :: NamedChunk
safety :: NamedChunk
scope :: NamedChunk
second_ :: NamedChunk
section_ :: NamedChunk
scenario :: NamedChunk
source :: NamedChunk
simulation :: NamedChunk
software :: NamedChunk
solution :: NamedChunk
specific :: NamedChunk
specification :: NamedChunk
stakeholder :: NamedChunk
standard :: NamedChunk
statement :: NamedChunk
symbol_ :: NamedChunk
system :: NamedChunk
table_ :: NamedChunk
task :: NamedChunk
template :: NamedChunk
term_ :: NamedChunk
terminology :: NamedChunk
theory :: NamedChunk
traceyGraph :: NamedChunk
traceyMatrix :: NamedChunk
type_ :: NamedChunk
uncertainty :: NamedChunk
user :: NamedChunk
useCase :: NamedChunk
validation :: NamedChunk
value :: NamedChunk
variable :: NamedChunk
video :: NamedChunk
verification :: NamedChunk
year :: NamedChunk
scpOfTheProjS :: NamedChunk
orgOfDoc :: NamedChunk
prpsOfDoc :: NamedChunk
refmat :: NamedChunk
scpOfReq :: NamedChunk
consVals :: NamedChunk
termAndDef :: NamedChunk
tOfSymb :: NamedChunk
traceyMandG :: NamedChunk
corSol :: NamedChunk
charOfIR :: NamedChunk
propOfCorSol :: NamedChunk
vav :: NamedChunk
scpOfTheProj :: (NamedChunk -> Sentence) -> NamedChunk
designDoc :: NamedChunk
fullForm :: NamedChunk
generalSystemDescription :: NamedChunk
moduleInterface :: NamedChunk
indPRCase :: NamedChunk
physicalConstraint :: NamedChunk
physicalSystem :: NamedChunk
problemDescription :: NamedChunk
prodUCTable :: NamedChunk
specificsystemdescription :: NamedChunk
systemdescription :: NamedChunk
systemConstraint :: NamedChunk
sysCont :: NamedChunk
userCharacteristic :: NamedChunk
datumConstraint :: NamedChunk
functionalRequirement :: NamedChunk
nonfunctionalRequirement :: NamedChunk
safetyReq :: NamedChunk
softwareConstraint :: NamedChunk
softwareDoc :: NamedChunk
softwareReq :: NamedChunk
softwareSys :: NamedChunk
softwareVerif :: NamedChunk
softwareVAV :: NamedChunk
solutionCharSpec :: NamedChunk
solutionCharacteristic :: NamedChunk
offShelfSolution :: NamedChunk
physicalSim :: NamedChunk
productUC :: NamedChunk
useCaseTable :: NamedChunk
physicalProperty :: NamedChunk
vavPlan :: NamedChunk
uncertCol :: NamedChunk
userInput :: NamedChunk
srsDom :: CommonConcept
goalStmtDom :: ConceptChunk
assumpDom :: ConceptChunk
reqDom :: ConceptChunk
funcReqDom :: ConceptChunk
nonFuncReqDom :: ConceptChunk
chgProbDom :: ConceptChunk
likeChgDom :: ConceptChunk
unlikeChgDom :: ConceptChunk

-- | List of domains for SRS
srsDomains :: [ConceptChunk]

-- | Apply a binary function to the terms of two named ideas, instead of to
--   the named ideas themselves. Ex. <tt>fterms compoundPhrase t1 t2</tt>
--   instead of <tt>compoundPhrase (t1 ^. term) (t2 ^. term)</tt>
fterms :: (NamedIdea c, NamedIdea d) => (NP -> NP -> t) -> c -> d -> t

module Data.Drasil.Concepts.Physics
rigidBody :: ConceptChunk
velocity :: ConceptChunk
friction :: ConceptChunk
elasticity :: ConceptChunk
energy :: ConceptChunk
mechEnergy :: ConceptChunk
collision :: ConceptChunk
space :: ConceptChunk
cartesian :: ConceptChunk
rightHand :: ConceptChunk
restitutionCoef :: ConceptChunk
acceleration :: ConceptChunk
pressure :: ConceptChunk
momentOfInertia :: ConceptChunk
force :: ConceptChunk
impulseS :: ConceptChunk
impulseV :: ConceptChunk
displacement :: ConceptChunk
gravitationalAccel :: ConceptChunk
gravitationalConst :: ConceptChunk
position :: ConceptChunk
distance :: ConceptChunk
time :: ConceptChunk
torque :: ConceptChunk
weight :: ConceptChunk
fbd :: ConceptChunk
angular :: ConceptChunk
linear :: ConceptChunk
tension :: ConceptChunk
compression :: ConceptChunk
stress :: ConceptChunk
strain :: ConceptChunk
angDisp :: ConceptChunk
angVelo :: ConceptChunk
angAccel :: ConceptChunk
linDisp :: ConceptChunk
linVelo :: ConceptChunk
linAccel :: ConceptChunk
joint :: ConceptChunk
damping :: ConceptChunk
cohesion :: ConceptChunk
isotropy :: ConceptChunk
twoD :: CI
threeD :: CI
physicCon :: [ConceptChunk]
physicCon' :: [CI]
kEnergy :: ConceptChunk

module Data.Drasil.Concepts.Thermodynamics
thermocon :: [ConceptChunk]
boiling :: ConceptChunk
boilPt :: ConceptChunk
degree_' :: ConceptChunk
lawConsEnergy :: ConceptChunk
lawConvCooling :: ConceptChunk
latentHeat :: ConceptChunk
melting :: ConceptChunk
meltPt :: ConceptChunk
phaseChange :: ConceptChunk
sensHeat :: ConceptChunk
temp :: ConceptChunk
thermalAnalysis :: ConceptChunk
thermalConduction :: ConceptChunk
thermalEnergy :: ConceptChunk
thermalConductor :: ConceptChunk
heat :: ConceptChunk
heatCapSpec :: ConceptChunk
htFlux :: ConceptChunk
heatTrans :: ConceptChunk
htTransTheo :: ConceptChunk
enerSrc :: ConceptChunk

module Data.Drasil.Concepts.SolidMechanics
solidcon :: [ConceptChunk]
elastMod :: ConceptChunk
mobShear :: ConceptChunk
normForce :: ConceptChunk
nrmStrss :: ConceptChunk
poissnsR :: ConceptChunk
shearForce :: ConceptChunk
shearRes :: ConceptChunk
stffness :: ConceptChunk

module Data.Drasil.Concepts.PhysicalProperties
physicalcon :: [ConceptChunk]
gaseous :: ConceptChunk
liquid :: ConceptChunk
solid :: ConceptChunk
ctrOfMass :: ConceptChunk
density :: ConceptChunk
specWeight :: ConceptChunk
mass :: ConceptChunk
len :: ConceptChunk
dimension :: ConceptChunk
vol :: ConceptChunk
flexure :: ConceptChunk
materialProprty :: NamedChunk

module Data.Drasil.Concepts.Education
educon :: [NamedChunk]
calculus :: NamedChunk
civil :: NamedChunk
degree_ :: NamedChunk
engineering :: NamedChunk
structural :: NamedChunk
mechanics :: NamedChunk
undergraduate :: NamedChunk
highSchool :: NamedChunk
physical_ :: NamedChunk
chemistry :: NamedChunk
undergradDegree :: NamedChunk
scndYrCalculus :: NamedChunk
solidMechanics :: NamedChunk
secondYear :: NamedChunk
structuralEng :: NamedChunk
structuralMechanics :: NamedChunk
civilEng :: NamedChunk
highSchoolCalculus :: NamedChunk
highSchoolPhysics :: NamedChunk
frstYr :: NamedChunk
physChem :: NamedChunk

module Data.Drasil.Concepts.Computation
algorithm :: ConceptChunk
modCalcDesc :: Sentence -> ConceptChunk
compcon :: [NamedChunk]
application :: NamedChunk
computer :: NamedChunk
structure :: NamedChunk
os :: CI
dataStruct :: NamedChunk
dataStruct' :: NamedChunk
dataType :: NamedChunk
dataType' :: NamedChunk
inDatum :: NamedChunk
outDatum :: NamedChunk
inParam :: NamedChunk
inVar :: NamedChunk
inValue :: NamedChunk
inQty :: NamedChunk
computerLiteracy :: NamedChunk
computerApp :: NamedChunk

module Data.Drasil.SI_Units
fundamentals :: [UnitDefn]
derived :: [UnitDefn]
siUnits :: [UnitDefn]
metre :: UnitDefn
kilogram :: UnitDefn
second :: UnitDefn
kelvin :: UnitDefn
mole :: UnitDefn
ampere :: UnitDefn
candela :: UnitDefn
degree :: UnitDefn
s_2 :: UnitDefn
m_2 :: UnitDefn
m_3 :: UnitDefn
becquerel :: UnitDefn
calorie :: UnitDefn
centigrade :: UnitDefn
coulomb :: UnitDefn
farad :: UnitDefn
gray :: UnitDefn
henry :: UnitDefn
hertz :: UnitDefn
joule :: UnitDefn
katal :: UnitDefn
kilopascal :: UnitDefn
kilowatt :: UnitDefn
litre :: UnitDefn
lumen :: UnitDefn
lux :: UnitDefn
millimetre :: UnitDefn
newton :: UnitDefn
ohm :: UnitDefn
pascal :: UnitDefn
radian :: UnitDefn
siemens :: UnitDefn
sievert :: UnitDefn
steradian :: UnitDefn
tesla :: UnitDefn
volt :: UnitDefn
watt :: UnitDefn
weber :: UnitDefn
specificE :: UnitDefn
specificWeight :: UnitDefn

module Data.Drasil.Quantities.Math
gradient :: DefinedQuantityDict
normalVect :: DefinedQuantityDict
unitVect :: DefinedQuantityDict
unitVectj :: DefinedQuantityDict
euclidNorm :: DefinedQuantityDict
perpVect :: DefinedQuantityDict
pi_ :: DefinedQuantityDict
uNormalVect :: DefinedQuantityDict
area :: UnitalChunk
diameter :: UnitalChunk
surface :: UnitalChunk
surArea :: UnitalChunk
orientation :: UnitalChunk

module Data.Drasil.Units.PhysicalProperties
densityU :: UnitDefn

module Data.Drasil.Quantities.PhysicalProperties
density :: UnitalChunk
specWeight :: UnitalChunk
mass :: UnitalChunk
len :: UnitalChunk
vol :: UnitalChunk

module Data.Drasil.Units.Physics
accelU :: UnitDefn
angVelU :: UnitDefn
angAccelU :: UnitDefn
forcePerMeterU :: UnitDefn
momtInertU :: UnitDefn
momentOfForceU :: UnitDefn
impulseU :: UnitDefn
springConstU :: UnitDefn
torqueU :: UnitDefn
velU :: UnitDefn
gravConstU :: UnitDefn

module Data.Drasil.Quantities.Physics
restitutionCoef :: DefinedQuantityDict
physicscon :: [UnitalChunk]
angularAccel :: UnitalChunk
angularDisplacement :: UnitalChunk
angularVelocity :: UnitalChunk
acceleration :: UnitalChunk
displacement :: UnitalChunk
distance :: UnitalChunk
energy :: UnitalChunk
force :: UnitalChunk
gravitationalAccel :: UnitalChunk
gravitationalConst :: UnitalChunk
impulseS :: UnitalChunk
impulseV :: UnitalChunk
linearAccel :: UnitalChunk
linearDisplacement :: UnitalChunk
linearVelocity :: UnitalChunk
momentOfInertia :: UnitalChunk
position :: UnitalChunk
pressure :: UnitalChunk
time :: UnitalChunk
torque :: UnitalChunk
velocity :: UnitalChunk
weight :: UnitalChunk
kEnergy :: UnitalChunk

module Data.Drasil.Units.SolidMechanics
stiffnessU :: UnitDefn
stiffness3D :: UnitDefn

module Data.Drasil.Quantities.SolidMechanics
elastMod :: UnitalChunk
mobShear :: UnitalChunk
nrmStrss :: UnitalChunk
shearRes :: UnitalChunk
stffness :: UnitalChunk
poissnsR :: DefinedQuantityDict

module Data.Drasil.Units.Thermodynamics
heatCapacity :: UnitDefn
heatCapSpec :: UnitDefn
thermalFlux :: UnitDefn
heatTransferCoef :: UnitDefn
volHtGenU :: UnitDefn

module Data.Drasil.Quantities.Thermodynamics
boilPt :: UnitalChunk
temp :: UnitalChunk
heatCapSpec :: UnitalChunk
htFlux :: UnitalChunk
latentHeat :: UnitalChunk
meltPt :: UnitalChunk
sensHeat :: UnitalChunk

module Data.Drasil.Utils

-- | outputs sentence with % attached to it
addPercent :: Show a => a -> Sentence

-- | bulletFlat applies Bullet and Flat to a list.
bulletFlat :: [Sentence] -> ListType

-- | bulletNested applies Bullets and headers to a Nested ListType. t -
--   Headers of the Nested lists. l - Lists of ListType.
bulletNested :: [Sentence] -> [ListType] -> ListType

-- | enumBullet apply Enumeration, Bullet and Flat to a list
enumBullet :: Reference -> [Sentence] -> LabelledContent
enumBulletU :: [Sentence] -> Contents

-- | enumSimple enumerates a list and applies simple and enumeration to it
--   s - start index for the enumeration t - title of the list l - list to
--   be enumerated
enumSimple :: Reference -> Integer -> Sentence -> [Sentence] -> LabelledContent
enumSimpleU :: Integer -> Sentence -> [Sentence] -> Contents
eqUnR :: Expr -> Reference -> LabelledContent
eqUnR' :: Expr -> Contents

-- | formats physical constraints
fmtPhys :: (Constrained c, Quantity c) => c -> Sentence

-- | formats software constraints
fmtSfwr :: (Constrained c, Quantity c) => c -> Sentence

-- | takes a amount and adds a unit to it n - sentenc representing an
--   amount u - unit we want to attach to amount
fmtU :: (MayHaveUnit a) => Sentence -> a -> Sentence

-- | fold helper functions applies f to all but the last element, applies g
--   to last element and the accumulator
foldle :: (a -> a -> a) -> (a -> a -> a) -> a -> [a] -> a

-- | fold helper functions applied f to all but last element, applies g to
--   last element and accumulator without starting value, does not work for
--   empty list
foldle1 :: (a -> a -> a) -> (a -> a -> a) -> [a] -> a

-- | Apply a binary function to the terms of two named ideas, instead of to
--   the named ideas themselves. Ex. <tt>fterms compoundPhrase t1 t2</tt>
--   instead of <tt>compoundPhrase (t1 ^. term) (t2 ^. term)</tt>
fterms :: (NamedIdea c, NamedIdea d) => (NP -> NP -> t) -> c -> d -> t

-- | gets a reasonable or typical value from a Constrained chunk
getRVal :: (HasUID c, HasReasVal c) => c -> Expr

-- | makes sentences from an item and its reference a - String title of
--   reference b - Sentence containing the full reference
itemRefToSent :: String -> Sentence -> Sentence

-- | makeListRef takes a list and a reference and generates references to
--   match the length of the list l - list whos length is to be matched
makeListRef :: [a] -> Section -> [Sentence]

-- | makes a traceability matrix from list of column rows and list of rows
makeTMatrix :: Eq a => [Sentence] -> [[a]] -> [a] -> [[Sentence]]

-- | zip helper function enumerates abbreviation and zips it with list of
--   itemtype s - the number from which the enumeration should start from t
--   - the title of the list l - the list to be enumerated
mkEnumAbbrevList :: Integer -> Sentence -> [Sentence] -> [(Sentence, ItemType)]

-- | takes a list of wrapped variables and creates an Input Data Table for
--   uses in Functional Requirments
mkInputDatTb :: (Quantity a, MayHaveUnit a) => [a] -> LabelledContent

-- | Helper for making a table from a columns
mkTableFromColumns :: [(Sentence, [Sentence])] -> ([Sentence], [[Sentence]])

-- | noRefs converts lists of simple ItemTypes into a lists which may be
--   used in Contents but not directly referable.
noRefs :: [ItemType] -> [(ItemType, Maybe String)]

-- | noRefsLT converts lists of tuples containing a title and ItemType into
--   a ListTuple which can be used with Contents but not directly
--   referable.
noRefsLT :: [(Sentence, ItemType)] -> [ListTuple]
prodUCTbl :: [[Sentence]] -> LabelledContent

-- | extracts the typical uncertainty to be displayed from something that
--   has an uncertainty
typUncr :: HasUncertainty c => c -> Sentence

-- | get a unit symbol if there is one
unwrap :: (Maybe UnitDefn) -> Sentence

-- | interweaves two lists together [[a,b,c],[d,e,f]] -&gt; [a,d,b,e,c,f]
weave :: [[a]] -> [a]

-- | traceability matrices row from a list of rows and a list of columns
zipFTable' :: Eq a => [a] -> [a] -> [Sentence]

-- | appends a sentence to the front of a list of list of sentences
zipSentList :: [[Sentence]] -> [Sentence] -> [[Sentence]] -> [[Sentence]]

module Data.Drasil.SentenceStructures

-- | partial function application of foldle for sentences specifically
foldlSent :: [Sentence] -> Sentence

-- | foldlSent but does not end with period
foldlSent_ :: [Sentence] -> Sentence

-- | foldlSent but ends with colon
foldlSentCol :: [Sentence] -> Sentence

-- | creates a list of elements separated by commas, including the last
--   element
foldlsC :: [Sentence] -> Sentence

-- | creates a list of elements separated by a "separator", ending with
--   "and" or "or"
foldlList :: SepType -> FoldType -> [Sentence] -> Sentence

-- | creates an list of elements with "enumerators" in "wrappers" using
--   foldlList
foldlEnumList :: EnumType -> WrapType -> SepType -> FoldType -> [Sentence] -> Sentence
tableShows :: LabelledContent -> Sentence -> Sentence
underConsidertn :: ConceptChunk -> Sentence
showingCxnBw :: NamedIdea c => c -> Sentence -> Sentence

-- | Create a list in the pattern of "The <b> are refined to the </b>".
--   Note: Order matters!
refineChain :: NamedIdea c => [(c, Section)] -> Sentence

-- | fold sentences then turns into content
foldlSP :: [Sentence] -> Contents
foldlSP_ :: [Sentence] -> Contents
foldlSPCol :: [Sentence] -> Contents
maybeChanged :: Sentence -> Sentence -> Sentence
maybeExpanded :: Sentence -> Sentence -> Sentence
maybeWOVerb :: Sentence -> Sentence -> Sentence

-- | helpful combinators for making Sentences for Terminologies with
--   Definitions term (acc) - definition
tAndDWAcc :: Concept s => s -> ItemType
tAndDWSym :: (Concept s, Quantity a) => s -> a -> ItemType
tAndDOnly :: Concept s => s -> ItemType
follows :: (Referable r, HasShortName r) => Sentence -> r -> Sentence

-- | Used when you want to say a term followed by its symbol. ex. "...using
--   the Force F in..."
getTandS :: (Quantity a) => a -> Sentence

-- | get term, definition, and symbol
getTDS :: (Quantity a, Concept a) => a -> Sentence
eqN :: Int -> Sentence
displayConstrntsAsSet :: Quantity a => a -> [String] -> Sentence
chgsStart :: (HasShortName x, Referable x) => x -> Sentence -> Sentence
data EnumType
Numb :: EnumType
Upper :: EnumType
Lower :: EnumType
data WrapType
Parens :: WrapType
Period :: WrapType
data SepType
Comma :: SepType
SemiCol :: SepType
data FoldType
List :: FoldType
Options :: FoldType

module Data.Drasil.Theories.Physics
physicsTMs :: [TheoryModel]
newtonSL :: TheoryModel
newtonSLRC :: RelationConcept
newtonSLRel :: Relation
newtonSLDesc :: Sentence
weightGD :: GenDefn
weightRC :: RelationConcept
weightEqn :: Relation
weightSrc :: Reference
weightDeriv :: Derivation
weightDerivSentences :: [Sentence]
weightDerivEqns :: [Sentence]
weightDerivAccelSentence :: [Sentence]
weightDerivNewtonSentence :: [Sentence]
weightDerivReplaceMassSentence :: [Sentence]
weightDerivSpecWeightSentence :: [Sentence]
weightDerivAccelEqn :: Expr
weightDerivNewtonEqn :: Expr
weightDerivReplaceMassEqn :: Expr
weightDerivSpecWeightEqn :: Expr
torqueDD :: DataDefinition
torque :: QDefinition
torqueEqn :: Expr
torqueDesc :: Sentence

module Data.Drasil.Concepts.Software
softwarecon :: [ConceptChunk]
c :: ConceptChunk
errMsg :: ConceptChunk
physLib :: ConceptChunk
program :: ConceptChunk
accuracy :: ConceptChunk
correctness :: ConceptChunk
maintainability :: ConceptChunk
performance :: ConceptChunk
performanceSpd :: ConceptChunk
portability :: ConceptChunk
reliability :: ConceptChunk
reusability :: ConceptChunk
understandability :: ConceptChunk
verifiability :: ConceptChunk
hwHiding :: ConceptChunk
modBehavHiding :: ConceptChunk
modControl :: ConceptChunk
modSfwrDecision :: ConceptChunk
modInputFormat :: ConceptChunk
modInputParam :: ConceptChunk
modInputConstraint :: ConceptChunk
modInputVerif :: ConceptChunk
modDerivedVal :: ConceptChunk
modInterpolation :: ConceptChunk
modInterpDatum :: ConceptChunk
modSeqServ :: ConceptChunk
modLinkedServ :: ConceptChunk
modAssocServ :: ConceptChunk
modVectorServ :: ConceptChunk
modPlotDesc :: ConceptChunk
modOutputfDescFun :: Sentence -> ConceptChunk
modOdeDesc :: ConceptChunk

module Data.Drasil.Software.Products
prodtcon :: [NamedChunk]
matlab :: CI
sciCompS :: NamedChunk
videoGame :: NamedChunk
openSource :: NamedChunk
compPro :: NamedChunk
