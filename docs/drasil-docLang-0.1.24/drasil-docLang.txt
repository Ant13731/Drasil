-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A framework for code and document generation for scientific software - Document Language SubPackage
--   
--   A framework for code and document generation for scientific software -
--   Document Language SubPackage
@package drasil-docLang
@version 0.1.24

module Drasil.DocLang.SRS

-- | SRS document constructor. Create the SRS from given system name,
--   authors, and sections
doc :: NamedIdea c => c -> Sentence -> [Section] -> Document

-- | Uses plural of system for title.
--   
--   SRS document constructor. Create the SRS from given system name,
--   authors, and sections
doc' :: NamedIdea c => c -> Sentence -> [Section] -> Document

-- | Standard SRS section builders
intro :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
prpsOfDoc :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
scpOfReq :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
charOfIR :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
orgOfDoc :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
stakeholder :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
theCustomer :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
theClient :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
genSysDes :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
sysCont :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
userChar :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
sysCon :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
scpOfTheProj :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
prodUCTable :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
indPRCase :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
specSysDes :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
probDesc :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
termAndDefn :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
termogy :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
physSyst :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
goalStmt :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
solCharSpec :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
assumpt :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
thModel :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
genDefn :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
inModel :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
dataDefn :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
datCon :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
require :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
nonfuncReq :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
funcReq :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
likeChg :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
unlikeChg :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
traceyMandG :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
appendix :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
reference :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
propCorSol :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
offShelfSol :: [Contents] -> [Section] -> Section

-- | Standard SRS section builders
valsOfAuxCons :: [Contents] -> [Section] -> Section
physSystLabel :: Reference
datConLabel :: Reference
genDefnLabel :: Reference
thModelLabel :: Reference
dataDefnLabel :: Reference
inModelLabel :: Reference
likeChgLabel :: Reference
tOfSymbLabel :: Reference
valsOfAuxConsLabel :: Reference
referenceLabel :: Reference
indPRCaseLabel :: Reference
unlikeChgLabel :: Reference
assumptLabel :: Reference
funcReqLabel :: Reference

-- | Standard SRS section builders
tOfSymb :: [Contents] -> [Section] -> Section
solCharSpecLabel :: Reference

module Drasil.DocumentLanguage.Units

-- | Get the units, if they exist, and wrap them as a Sentence
toSentence :: (MayHaveUnit u) => u -> Sentence
toSentenceUnitless :: (MayHaveUnit u) => u -> Sentence

module Drasil.DocLang
newtype AppndxSec
AppndxProg :: [Contents] -> AppndxSec

-- | Values of Auxiliary Constants section
data AuxConstntSec
AuxConsProg :: CI -> [QDefinition] -> AuxConstntSec
data DerivationDisplay
ShowDerivation :: DerivationDisplay
HideDerivation :: DerivationDisplay
type DocDesc = [DocSection]

-- | Document sections are either Reference, Introduction, or Specific
--   System Description sections (for now!)
data DocSection
RefSec :: RefSec -> DocSection
IntroSec :: IntroSec -> DocSection
StkhldrSec :: StkhldrSec -> DocSection
GSDSec :: GSDSec -> DocSection
SSDSec :: SSDSec -> DocSection
ReqrmntSec :: ReqrmntSec -> DocSection
LCsSec :: LCsSec -> DocSection
LCsSec' :: LCsSec' -> DocSection
UCsSec :: UCsSec -> DocSection
TraceabilitySec :: TraceabilitySec -> DocSection
AuxConstntSec :: AuxConstntSec -> DocSection
Bibliography :: DocSection
AppndxSec :: AppndxSec -> DocSection
ExistingSolnSec :: ExistingSolnSec -> DocSection

-- | How to handle Emphasis
data Emphasis
Bold :: Emphasis
Italics :: Emphasis
data GSDSec
GSDProg2 :: [GSDSub] -> GSDSec
data GSDSub
[SysCntxt] :: [Contents] -> GSDSub
[UsrChars] :: [Contents] -> GSDSub
[SystCons] :: [Contents] -> [Section] -> GSDSub

-- | Introduction section. Contents are top level followed by a list of
--   subsections.
data IntroSec

-- | Temporary, will be modified once we've figured out more about the
--   section.
IntroProg :: Sentence -> Sentence -> [IntroSub] -> IntroSec

-- | Introduction subsections
data IntroSub
[IPurpose] :: Sentence -> IntroSub
[IScope] :: Sentence -> Sentence -> IntroSub
[IChar] :: [Sentence] -> [Sentence] -> [Sentence] -> IntroSub
[IOrgSec] :: Sentence -> CI -> Section -> Sentence -> IntroSub
newtype LCsSec
LCsProg :: [Contents] -> LCsSec

-- | Lens (lookup) functions (currently for TSymb)
data LFunc
[Term] :: LFunc
[Defn] :: LFunc
[TermExcept] :: [DefinedQuantityDict] -> LFunc
[DefnExcept] :: [DefinedQuantityDict] -> LFunc
[TAD] :: LFunc

-- | Types of literature
data Literature

-- | literature
Lit :: Topic -> Literature

-- | existing documentation for (plural of topic)
Doc' :: Topic -> Literature

-- | manual
Manual :: Topic -> Literature

-- | Problem Description section
data ProblemDescription
[PDProg] :: Sentence -> CI -> Sentence -> [Section] -> ProblemDescription

-- | Reference section. Contents are top level followed by a list of
--   subsections.
data RefSec
RefProg :: Contents -> [RefTab] -> RefSec

-- | Reference subsections
data RefTab
[TUnits] :: RefTab
[TUnits'] :: [TUIntro] -> RefTab
[TSymb] :: [TSIntro] -> RefTab
[TSymb'] :: LFunc -> [TSIntro] -> RefTab
[TAandA] :: RefTab
newtype ReqrmntSec
ReqsProg :: [ReqsSub] -> ReqrmntSec
data ReqsSub
[FReqsSub] :: [ConceptInstance] -> [LabelledContent] -> ReqsSub
[NonFReqsSub] :: [ConceptInstance] -> ReqsSub

-- | Solution Characteristics Specification subsections
data SCSSub
[Assumptions] :: SCSSub
[TMs] :: [Sentence] -> Fields -> [TheoryModel] -> SCSSub
[GDs] :: [Sentence] -> Fields -> [GenDefn] -> DerivationDisplay -> SCSSub
[DDs] :: [Sentence] -> Fields -> [DataDefinition] -> DerivationDisplay -> SCSSub
[IMs] :: [Sentence] -> Fields -> [InstanceModel] -> DerivationDisplay -> SCSSub
[Constraints] :: Sentence -> Sentence -> Sentence -> [LabelledContent] -> SCSSub
[CorrSolnPpties] :: [Contents] -> SCSSub

-- | Specific System Description section . Contains a list of subsections.
newtype SSDSec
SSDProg :: [SSDSub] -> SSDSec

-- | Specific system description subsections
data SSDSub
[SSDSubVerb] :: Section -> SSDSub
[SSDProblem] :: ProblemDescription -> SSDSub
[SSDSolChSpec] :: SolChSpec -> SSDSub

-- | Solution Characteristics Specification section
data SolChSpec
[SCSProg] :: [SCSSub] -> SolChSpec

-- | Off-The-Shelf Solutions section
newtype ExistingSolnSec
ExistSolnProg :: [Contents] -> ExistingSolnSec

-- | Stakeholders section
data StkhldrSec
StkhldrProg2 :: [StkhldrSub] -> StkhldrSec
newtype LCsSec'
LCsProg' :: [ConceptInstance] -> LCsSec'

-- | Stakeholders subsections
data StkhldrSub
[Client] :: CI -> Sentence -> StkhldrSub
[Cstmr] :: CI -> StkhldrSub

-- | Possible typographic conventions
data TConvention

-- | How vectors are emphasized
Vector :: Emphasis -> TConvention

-- | Verbatim for specialized conventions
Verb :: Sentence -> TConvention
data TraceabilitySec
TraceabilityProg :: [LabelledContent] -> [Sentence] -> [Contents] -> [Section] -> TraceabilitySec

-- | For creating the table of symbols intro
data TSIntro

-- | Typographic conventions used
TypogConvention :: [TConvention] -> TSIntro

-- | Symbol ordering (defaults to alphabetical)
SymbOrder :: TSIntro

-- | Symbol conventions match specified literature
SymbConvention :: [Literature] -> TSIntro

-- | Purpose of the Table of Symbols
TSPurpose :: TSIntro
newtype UCsSec
UCsProg :: [Contents] -> UCsSec

-- | Creates a document from a document description and system information
mkDoc :: DocDesc -> (IdeaDict -> IdeaDict -> Sentence) -> SystemInformation -> Document

-- | Default Term and given intro
--   
--   table of symbols constructor
tsymb :: [TSIntro] -> RefTab

-- | Custom function and intro.
--   
--   Custom table of symbols constructor
tsymb'' :: [TSIntro] -> LFunc -> RefTab

-- | mkEnumSimple is a convenience function for converting lists into
--   Simple-type Enumerations.
mkEnumSimple :: (a -> ListTuple) -> [a] -> [Contents]

-- | mkEnumSimpleD is a convenience function for transforming types which
--   are instances of the constraints Referable, HasShortName, and
--   Definition, into Simple-type Enumerations.
mkEnumSimpleD :: (Referable c, HasShortName c, Definition c) => [c] -> [Contents]

-- | Fields that should be displayed in definitions
data Field
Label :: Field
Symbol :: Field
Units :: Field
DefiningEquation :: Field
Description :: Verbosity -> InclUnits -> Field
Input :: Field
Output :: Field
InConstraints :: Field
OutConstraints :: Field
Notes :: Field
Source :: Field
RefBy :: Field

-- | Synonym for a list of <a>Field</a>
type Fields = [Field]
data InclUnits
IncludeUnits :: InclUnits
data Verbosity
Verbose :: Verbosity

-- | Create a data definition using a list of fields, a database of
--   symbols, and a QDefinition (called automatically by <tt>SCSSub</tt>
--   program)
ddefn :: Fields -> SystemInformation -> DataDefinition -> LabelledContent
data ModelDB
ddRefDB :: ModelDB -> RefMap DataDefinition
mdb :: [TheoryModel] -> [GenDefn] -> [DataDefinition] -> [InstanceModel] -> ModelDB
valsOfAuxConstantsF :: (Idea a) => a -> [QDefinition] -> Section
genSysF :: [Section] -> Contents -> [Contents] -> [Section] -> Section

-- | Default reference section introduction
intro :: Contents
reqF :: [Section] -> Section

-- | takes a list of wrapped variables and creates an Input Data Table for
--   uses in Functional Requirments
mkInputPropsTable :: (Quantity i, MayHaveUnit i, HasShortName r, Referable r) => [i] -> r -> LabelledContent
mkQRTuple :: (Quantity i, MayHaveUnit i, HasShortName i, Referable i) => [i] -> [(QuantityDict, Sentence)]
mkQRTupleRef :: (Quantity i, MayHaveUnit i, HasShortName r, Referable r) => [i] -> [r] -> [(QuantityDict, Sentence)]

-- | takes a list of tuples of variables and sources and creates an table
--   for uses in Functional Requirments
mkValsSourceTable :: (Quantity i, MayHaveUnit i) => [(i, Sentence)] -> String -> Sentence -> LabelledContent
assumpF :: Section -> Section -> Section -> Section -> Section -> Section -> [Contents] -> Section
dataConstraintUncertainty :: Sentence
dataDefnF :: Sentence -> [Contents] -> Section
goalStmtF :: [Sentence] -> [Contents] -> Section
inDataConstTbl :: (HasUncertainty c, Quantity c, Constrained c, HasReasVal c, MayHaveUnit c) => [c] -> LabelledContent
inModelF :: Section -> Section -> Section -> Section -> [Contents] -> Section
outDataConstTbl :: (Quantity c, Constrained c) => [c] -> LabelledContent
physSystDesc :: Sentence -> LabelledContent -> [Contents] -> Section
probDescF :: (Idea a) => Sentence -> a -> Sentence -> [Section] -> Section
termDefnF :: Maybe Sentence -> [Contents] -> Section

-- | Specific System description section builder. Takes the system and
--   subsections.
specSysDescr :: [Section] -> Section
traceGIntro :: [LabelledContent] -> [Sentence] -> [UnlabelledContent]
traceMGF :: [LabelledContent] -> [Sentence] -> [Contents] -> [Section] -> Section
generateTraceTable :: SystemInformation -> LabelledContent
getDocDesc :: DocDesc -> [Sentence]
egetDocDesc :: DocDesc -> [Expr]
ciGetDocDesc :: DocDesc -> [CI]
generateTraceMap :: [DocSection] -> TraceMap
getTraceMapFromTM :: [SCSSub] -> [TheoryModel]
getTraceMapFromGD :: [SCSSub] -> [GenDefn]
getTraceMapFromDD :: [SCSSub] -> [DataDefinition]
getTraceMapFromIM :: [SCSSub] -> [InstanceModel]
getSCSSub :: [DocSection] -> [SCSSub]
generateTraceMap' :: [ConceptInstance] -> TraceMap
goalStmtLabel :: Reference
solutionLabel :: Reference
characteristicsLabel :: Reference
physSystDescriptionLabel :: Reference
