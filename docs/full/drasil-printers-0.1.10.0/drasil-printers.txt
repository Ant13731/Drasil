-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A framework for code and document generation for scientific software - Printers SubPackage
--   
--   Please see the README on GitHub at
--   <a>https://github.com/JacquesCarette/Drasil#readme</a>
@package drasil-printers
@version 0.1.10.0


-- | Global configuration for output (This should be deprecated in the
--   future as Recipes evolve)
module Language.Drasil.Config

-- | TeX Only - Numbered sections?
numberedSections :: Bool

-- | TeX Only - Settings for hyperref
hyperSettings :: String

-- | TeX font size
fontSize :: Int

-- | Used to name the BibTeX file
bibFname :: String

-- | Print verbose data definition descriptions?
verboseDDDescription :: Bool

-- | The bibliography format
data StyleGuide
MLA :: StyleGuide
APA :: StyleGuide
Chicago :: StyleGuide
bibStyleH :: StyleGuide
bibStyleT :: String

-- | TeX Only - column width for data definitions (fraction of LaTeX
--   textwidth)
colAwidth :: Double

-- | TeX Only - column width for data definitions (fraction of LaTeX
--   textwidth)
colBwidth :: Double

-- | TeX Only - Number Data Definition equations?
numberedDDEquations :: Bool

-- | TeX Only - Number Theoretical Model equations?
numberedTMEquations :: Bool

module Language.Drasil.Format

-- | Possible formats for output
data Format
TeX :: Format
Plain :: Format
HTML :: Format

module Language.Drasil.HTML.CSS

-- | Generates the CSS selectors necessary for a document
makeCSS :: Document -> Doc

-- | Create the link to the necessary CSS file
linkCSS :: String -> Doc

module Language.Drasil.HTML.Monad

-- | Printing "monad". Don't need context, so Identity (under another name)
--   will do just fine.
newtype PrintHTML
PH :: String -> PrintHTML
[unPH] :: PrintHTML -> String
instance Language.Drasil.Unicode.RenderSpecial Language.Drasil.HTML.Monad.PrintHTML

module Language.Drasil.Markdown.CreateMd
makeMd :: [Doc] -> Doc
introInfo :: String -> [String] -> Doc
verInfo :: String -> String -> Doc
unsupOS :: Maybe String -> Doc
extLibSec :: [(String, String)] -> [String] -> Doc
regularSec :: Doc -> Doc -> Doc
instDoc :: [String] -> Doc

module Language.Drasil.Plain.Helpers
toPlainName :: String -> String

module Language.Drasil.Printing.AST
data LinkType
Internal :: LinkType
Cite2 :: LinkType
External :: LinkType
data Ops
IsIn :: Ops
Integer :: Ops
Real :: Ops
Rational :: Ops
Natural :: Ops
Boolean :: Ops
Comma :: Ops
Prime :: Ops
Log :: Ops
Ln :: Ops
Sin :: Ops
Cos :: Ops
Tan :: Ops
Sec :: Ops
Csc :: Ops
Cot :: Ops
Arcsin :: Ops
Arccos :: Ops
Arctan :: Ops
Not :: Ops
Dim :: Ops
Exp :: Ops
Neg :: Ops
Cross :: Ops
Dot :: Ops
Eq :: Ops
NEq :: Ops
Lt :: Ops
Gt :: Ops
LEq :: Ops
GEq :: Ops
Impl :: Ops
Iff :: Ops
Subt :: Ops
And :: Ops
Or :: Ops
Add :: Ops
Mul :: Ops
Summ :: Ops
Inte :: Ops
Prod :: Ops
Point :: Ops
Perc :: Ops
data Fence
Paren :: Fence
Curly :: Fence
Norm :: Fence
Abs :: Fence
data OverSymb
Hat :: OverSymb
data Fonts
Bold :: Fonts
Emph :: Fonts
data Spacing
Thin :: Spacing
type Label = Spec
data Expr
Dbl :: Double -> Expr
Int :: Integer -> Expr
Str :: String -> Expr
Case :: [(Expr, Expr)] -> Expr
Mtx :: [[Expr]] -> Expr
Row :: [Expr] -> Expr
Ident :: String -> Expr
Label :: String -> Expr
Spec :: Special -> Expr
Sub :: Expr -> Expr
Sup :: Expr -> Expr
MO :: Ops -> Expr
Over :: OverSymb -> Expr -> Expr
Fenced :: Fence -> Fence -> Expr -> Expr
Font :: Fonts -> Expr -> Expr
Div :: Expr -> Expr -> Expr
Sqrt :: Expr -> Expr
Spc :: Spacing -> Expr
data Spec
E :: Expr -> Spec
S :: String -> Spec
(:+:) :: Spec -> Spec -> Spec
Sp :: Special -> Spec
Ref :: LinkType -> String -> Spec -> Spec
EmptyS :: Spec
Quote :: Spec -> Spec
HARDNL :: Spec
infixr 5 :+:
type Title = Spec
data ListType
Ordered :: [(ItemType, Maybe Label)] -> ListType
Unordered :: [(ItemType, Maybe Label)] -> ListType
Simple :: [(Title, ItemType, Maybe Label)] -> ListType
Desc :: [(Title, ItemType, Maybe Label)] -> ListType
Definitions :: [(Title, ItemType, Maybe Label)] -> ListType
data ItemType
Flat :: Spec -> ItemType
Nested :: Spec -> ListType -> ItemType

module Language.Drasil.HTML.Helpers

-- | HTML tag wrapper
html :: Doc -> Doc

-- | Head tag wrapper
headTag :: Doc -> Doc

-- | Body tag wrapper
body :: Doc -> Doc

-- | Title tag wrapper
title :: Doc -> Doc

-- | Paragraph tag wrapper
paragraph :: Doc -> Doc

-- | Code tag wrapper
code :: Doc -> Doc

-- | Table row tag wrapper
tr :: Doc -> Doc

-- | Table header tag wrapper
th :: Doc -> Doc

-- | Table cell tag wrapper
td :: Doc -> Doc

-- | Figure tag wrapper
figure :: Doc -> Doc

-- | Figcaption tag wrapper
figcaption :: Doc -> Doc

-- | List tag wrapper
li :: Doc -> Doc

-- | Paragraph in list tag wrapper
pa :: Doc -> Doc
ba :: Doc -> Doc

-- | Ordered list tag wrapper
ol :: [String] -> Doc -> Doc

-- | Unordered list tag wrapper
ul :: [String] -> Doc -> Doc

-- | Table tag wrapper
table :: [String] -> Doc -> Doc

-- | Image tag wrapper
img :: [(String, Doc)] -> Doc

-- | Helper for HTML headers
h :: Int -> Doc -> Doc
data Variation
Class :: Variation
Id :: Variation
wrap :: String -> [String] -> Doc -> Doc
wrap' :: String -> [String] -> Doc -> Doc

-- | Helper for wrapping HTML tags. The forth argument provides class names
--   for the CSS.
wrapGen' :: ([Doc] -> Doc) -> Variation -> String -> Doc -> [String] -> Doc -> Doc
wrapGen :: Variation -> String -> Doc -> [String] -> Doc -> Doc

-- | Helper for wrapping attributes in a tag. | The first argument is tag
--   name. | The String in the pair is the attribute name, | The Doc is the
--   value for different attributes.
wrapInside :: String -> [(String, Doc)] -> Doc

-- | Helper for setting up captions
caption :: Doc -> Doc
refwrap :: Doc -> Doc -> Doc

-- | Helper for setting up links to references
reflink :: String -> Doc -> Doc

-- | Helper for setting up links to references with additional information
reflinkInfo :: String -> Doc -> Doc -> Doc

-- | Helper for setting up links to external URIs
reflinkURI :: String -> Doc -> Doc

-- | Helper for setting up figures
image :: Doc -> Doc -> MaxWidthPercent -> Doc

-- | Emphasis (italics) tag
em :: Doc -> Doc

-- | Superscript tag
sup :: Doc -> Doc

-- | Subscript tag
sub :: Doc -> Doc

-- | Bold tag
bold :: Doc -> Doc

-- | Title header
articleTitle :: Doc -> Doc

-- | Author header
author :: Doc -> Doc

-- | Div tag wrapper
divTag :: [String] -> Doc -> Doc
spanTag :: [String] -> Doc -> Doc
indent :: Doc -> Doc

-- | Create and markup fractions fraction :: Doc -&gt; Doc -&gt; Doc
--   fraction a b = divTag ["fraction"] (spanTag ["fup"] a $$ spanTag
--   ["fdn"] b)
--   
--   Build case expressions
makeCases :: [(Expr, Expr)] -> (Expr -> Doc) -> Doc

module Language.Drasil.Printing.Citation
type BibRef = [Citation]
data Citation
Cite :: EntryID -> CitationKind -> [CiteField] -> Citation

-- | Fields used in citations.
data CiteField
Address :: Spec -> CiteField
Author :: People -> CiteField
BookTitle :: Spec -> CiteField
Chapter :: Int -> CiteField
Edition :: Int -> CiteField
Editor :: People -> CiteField
HowPublished :: HP -> CiteField
Institution :: Spec -> CiteField
Journal :: Spec -> CiteField
Month :: Month -> CiteField
Note :: Spec -> CiteField
Number :: Int -> CiteField
Organization :: Spec -> CiteField
Pages :: [Int] -> CiteField
Publisher :: Spec -> CiteField
School :: Spec -> CiteField
Series :: Spec -> CiteField
Title :: Spec -> CiteField
Type :: Spec -> CiteField
Volume :: Int -> CiteField
Year :: Int -> CiteField

-- | How Published. Necessary for URLs to work properly.
data HP
URL :: Spec -> HP
Verb :: Spec -> HP


-- | Helper functions for printing
module Language.Drasil.Printing.Helpers

-- | Basic text-rendering helper function
bslash :: Doc

-- | Double backslash
--   
--   Basic text-rendering helper function
dbs :: Doc

-- | "="
--   
--   Basic text-rendering helper function
assign :: Doc

-- | "=="
--   
--   Basic text-rendering helper function
eq :: Doc

-- | Basic text-rendering helper function
lt :: Doc

-- | Basic text-rendering helper function
gt :: Doc

-- | Basic text-rendering helper function
leq :: Doc

-- | Basic text-rendering helper function
geq :: Doc

-- | Basic text-rendering helper function
dlr :: Doc

-- | Basic text-rendering helper function
ast :: Doc

-- | Basic text-rendering helper function
pls :: Doc

-- | Basic text-rendering helper function
hat :: Doc

-- | Basic text-rendering helper function
slash :: Doc

-- | Basic text-rendering helper function
hyph :: Doc

-- | Basic text-rendering helper function
tab :: Doc

-- | Basic text-rendering helper function
unders :: Doc

-- | Text-rendering helper for wrapping strings with brackets/braces
sq :: String -> Doc

-- | Text-rendering helper for wrapping strings with brackets/braces
br :: String -> Doc
dot :: Doc -> Doc
comm :: Doc -> Doc
dollarDoc :: Doc -> Doc

-- | basic plaintext (String) wrapping
paren :: String -> String

-- | basic plaintext (String) wrapping
brace :: String -> String

-- | basic plaintext (String) wrapping
dollar :: String -> String

-- | basic plaintext (String) wrapping
sqbrac :: String -> String

-- | basic plaintext (String) wrapping
angbrac :: String -> String

-- | Format strings and convert to Doc
upcase :: String -> Doc

-- | Format strings and convert to Doc
lowcase :: String -> Doc
sufx :: Int -> String
sufxer :: Int -> String

module Language.Drasil.Printing.LayoutObj
data Document
Document :: Title -> Author -> [LayoutObj] -> Document
type Author = Spec
type Contents = Spec
type Items = [LayoutObj]
type Tags = [String]
type Depth = Int
type Width = Float
type Height = Float
type Filepath = String
type Caption = Spec
data LayoutObj
Table :: Tags -> [[Spec]] -> Label -> Bool -> Caption -> LayoutObj
Header :: Depth -> Title -> Label -> LayoutObj
Paragraph :: Contents -> LayoutObj
EqnBlock :: Contents -> LayoutObj
Definition :: DType -> [(String, [LayoutObj])] -> Label -> LayoutObj
List :: ListType -> LayoutObj
Figure :: Label -> Caption -> Filepath -> MaxWidthPercent -> LayoutObj
Graph :: [(Spec, Spec)] -> Maybe Width -> Maybe Height -> Caption -> Label -> LayoutObj
HDiv :: Tags -> [LayoutObj] -> Label -> LayoutObj
Bib :: BibRef -> LayoutObj

module Language.Drasil.Printing.PrintingInformation
data Notation
Scientific :: Notation
Engineering :: Notation
class HasPrintingOptions c
getSetting :: HasPrintingOptions c => Lens' c Notation
newtype PrintingConfiguration
PC :: Notation -> PrintingConfiguration
[_notation] :: PrintingConfiguration -> Notation
notation :: Iso' PrintingConfiguration Notation
data PrintingInformation
PI :: ChunkDB -> Stage -> PrintingConfiguration -> PrintingInformation
[_ckdb] :: PrintingInformation -> ChunkDB
[_stg] :: PrintingInformation -> Stage
[_configuration] :: PrintingInformation -> PrintingConfiguration
stg :: Lens' PrintingInformation Stage
configuration :: Lens' PrintingInformation PrintingConfiguration
ckdb :: Lens' PrintingInformation ChunkDB
defaultConfiguration :: PrintingConfiguration
instance Language.Drasil.Printing.PrintingInformation.HasPrintingOptions Language.Drasil.Printing.PrintingInformation.PrintingInformation
instance Language.Drasil.Printing.PrintingInformation.HasPrintingOptions Language.Drasil.Printing.PrintingInformation.PrintingConfiguration

module Language.Drasil.Printing.Import

-- | Render a Space
space :: PrintingInformation -> Space -> Expr

-- | expr translation function from Drasil to layout AST
expr :: Expr -> PrintingInformation -> Expr
symbol :: Symbol -> Expr

-- | Translates Sentence to the Printing representation of Sentence
--   (<tt>Spec</tt>)
spec :: PrintingInformation -> Sentence -> Spec

-- | Translates from Document to the Printing representation of Document
makeDocument :: PrintingInformation -> Document -> Document

module Language.Drasil.Plain.Print
data Linearity
Linear :: Linearity
Nonlinear :: Linearity
exprDoc :: ChunkDB -> Stage -> Linearity -> Expr -> Doc
sentenceDoc :: ChunkDB -> Stage -> Linearity -> Sentence -> Doc
symbolDoc :: Symbol -> Doc
unitDoc :: Linearity -> USymb -> Doc

module Language.Drasil.TeX.Monad
data MathContext
Text :: MathContext
Math :: MathContext
Curr :: MathContext
newtype PrintLaTeX a
PL :: (MathContext -> a) -> PrintLaTeX a
[runPrint] :: PrintLaTeX a -> MathContext -> a
type D = PrintLaTeX Doc
switch :: (MathContext -> MathContext) -> D -> D
toMath :: D -> D
toText :: D -> D
getCtx :: PrintLaTeX MathContext
(%%) :: D -> D -> D
($+$) :: D -> D -> D
tpRunPrint :: ([Doc] -> Doc) -> [D] -> D
vcat :: [D] -> D
vpunctuate :: Doc -> [D] -> D
hpunctuate :: Doc -> [D] -> D
lub :: MathContext -> MathContext -> MathContext
newtype Latex
L :: String -> Latex
[unPL] :: Latex -> String
instance GHC.Classes.Eq Language.Drasil.TeX.Monad.MathContext
instance Language.Drasil.Unicode.RenderSpecial Language.Drasil.TeX.Monad.Latex
instance GHC.Base.Functor Language.Drasil.TeX.Monad.PrintLaTeX
instance GHC.Base.Applicative Language.Drasil.TeX.Monad.PrintLaTeX
instance GHC.Base.Monad Language.Drasil.TeX.Monad.PrintLaTeX
instance GHC.Base.Semigroup (Language.Drasil.TeX.Monad.PrintLaTeX Text.PrettyPrint.HughesPJ.Doc)
instance GHC.Base.Monoid (Language.Drasil.TeX.Monad.PrintLaTeX Text.PrettyPrint.HughesPJ.Doc)

module Language.Drasil.TeX.Helpers
br :: D -> D
sq :: D -> D
parens :: D -> D
quote :: D -> D
command0 :: String -> D
command :: String -> String -> D
commandD :: String -> D -> D
command1o :: String -> Maybe String -> String -> D
command1oD :: String -> Maybe D -> D -> D
command1p :: String -> String -> String -> D
command1pD :: String -> D -> D -> D
texSym :: String -> D
command2 :: String -> String -> String -> D
command2D :: String -> D -> D -> D
command3 :: String -> String -> String -> String -> D
mkEnv :: String -> D -> D
mkEnvArgBr :: String -> String -> D -> D
mkEnvArgSq :: String -> String -> D -> D
mkMinipage :: D -> D
comm :: String -> String -> Maybe String -> D
renewcomm :: String -> String -> D
empty :: D
genSec :: Int -> D
ref :: String -> D -> D
sref :: String -> D -> D
hyperref :: String -> D -> D
externalref :: String -> D -> D
snref :: String -> D -> D
href :: String -> String -> D
cite :: String -> Maybe D -> D
count :: String -> D
mathbb :: String -> D
usepackage :: String -> D
includegraphics :: MaxWidthPercent -> String -> D
author :: D -> D
caption :: D -> D
item :: D -> D
label :: D -> D
title :: D -> D
bold :: D -> D
item' :: D -> D -> D
maketitle :: D
maketoc :: D
newpage :: D
centering :: D
code :: D -> D
itemize :: D -> D
enumerate :: D -> D
description :: D -> D
figure :: D -> D
center :: D -> D
document :: D -> D
equation :: D -> D
symbDescription :: D -> D
docclass :: String -> String -> D
sec :: Int -> D -> D
subscript :: D -> D -> D
superscript :: D -> D -> D
bullet :: D
counter :: D
ddefnum :: D
ddref :: D
colAw :: D
colBw :: D
arrayS :: D
modcounter :: D
modnum :: D
newline :: D -> D
fraction :: D -> D -> D
hyperConfig :: D
useTikz :: D
toEqn :: D -> D
paren :: String -> String
sqbrac :: String -> String

module Language.Drasil.TeX.Preamble
genPreamble :: [LayoutObj] -> D
instance GHC.Classes.Eq Language.Drasil.TeX.Preamble.Def
instance GHC.Classes.Eq Language.Drasil.TeX.Preamble.Package

module Language.Drasil.TeX.Print
genTeX :: Document -> PrintingInformation -> Doc
pExpr :: Expr -> D
pUnit :: USymb -> D
spec :: Spec -> D

module Language.Drasil.HTML.Print

-- | Generate an HTML document from a Drasil <a>Document</a>
genHTML :: PrintingInformation -> String -> Document -> Doc

module Language.Drasil.Printers

-- | Possible formats for output
data Format
TeX :: Format
HTML :: Format

-- | Generates the CSS selectors necessary for a document
makeCSS :: Document -> Doc

-- | Generate an HTML document from a Drasil <a>Document</a>
genHTML :: PrintingInformation -> String -> Document -> Doc
makeMd :: [Doc] -> Doc
introInfo :: String -> [String] -> Doc
verInfo :: String -> String -> Doc
unsupOS :: Maybe String -> Doc
regularSec :: Doc -> Doc -> Doc
instDoc :: [String] -> Doc
extLibSec :: [(String, String)] -> [String] -> Doc
toPlainName :: String -> String
data Linearity
Linear :: Linearity
Nonlinear :: Linearity
sentenceDoc :: ChunkDB -> Stage -> Linearity -> Sentence -> Doc
exprDoc :: ChunkDB -> Stage -> Linearity -> Expr -> Doc
symbolDoc :: Symbol -> Doc
unitDoc :: Linearity -> USymb -> Doc
genTeX :: Document -> PrintingInformation -> Doc
data PrintingInformation
PI :: ChunkDB -> Stage -> PrintingConfiguration -> PrintingInformation
[_ckdb] :: PrintingInformation -> ChunkDB
[_stg] :: PrintingInformation -> Stage
[_configuration] :: PrintingInformation -> PrintingConfiguration
class HasPrintingOptions c
getSetting :: HasPrintingOptions c => Lens' c Notation
data Notation
Scientific :: Notation
Engineering :: Notation
defaultConfiguration :: PrintingConfiguration
