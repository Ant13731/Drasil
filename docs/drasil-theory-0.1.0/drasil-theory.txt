-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A framework for code and document generation for scientific software - Theory SubPackage
--   
--   A framework for code and document generation for scientific software -
--   Theory SubPackage
@package drasil-theory
@version 0.1.0

module Theory.Drasil
class HasInputs c
inputs :: HasInputs c => Lens' c [(QuantityDict, Maybe (RealInterval Expr Expr))]
class HasOutput c
output :: HasOutput c => Lens' c QuantityDict
out_constraints :: HasOutput c => Lens' c [RealInterval Expr Expr]
data DataDefinition
mkQuantDef :: (Quantity c, MayHaveUnit c) => c -> Expr -> QDefinition
mkQuantDef' :: (Quantity c, MayHaveUnit c) => c -> NP -> Expr -> QDefinition

-- | Smart constructor for data definitions
dd :: QDefinition -> [Reference] -> Maybe Derivation -> String -> [Sentence] -> DataDefinition

-- | Smart constructor for data definitions with no references
ddNoRefs :: QDefinition -> Maybe Derivation -> String -> [Sentence] -> DataDefinition
qdFromDD :: DataDefinition -> QDefinition

-- | A GenDefn is a RelationConcept that may have units
data GenDefn
gd :: IsUnit u => RelationConcept -> Maybe u -> Maybe Derivation -> [Reference] -> String -> [Sentence] -> GenDefn
gdNoRefs :: IsUnit u => RelationConcept -> Maybe u -> Maybe Derivation -> String -> [Sentence] -> GenDefn

-- | An Instance Model is a RelationConcept that may have specific
--   input/output constraints. It also has attributes like derivation,
--   source, etc.
data InstanceModel

-- | Smart constructor for instance models with everything defined
im :: RelationConcept -> Inputs -> Output -> OutputConstraints -> [Reference] -> Maybe Derivation -> String -> [Sentence] -> InstanceModel

-- | Smart constructor for instance models; no derivation
imNoDeriv :: RelationConcept -> Inputs -> Output -> OutputConstraints -> [Reference] -> String -> [Sentence] -> InstanceModel

-- | Smart constructor for instance models; no references
imNoRefs :: RelationConcept -> Inputs -> Output -> OutputConstraints -> Maybe Derivation -> String -> [Sentence] -> InstanceModel

-- | Smart constructor for instance models; no derivations or references
imNoDerivNoRefs :: RelationConcept -> Inputs -> Output -> OutputConstraints -> String -> [Sentence] -> InstanceModel

-- | For building a quantity with no constraint
qwUC :: (Quantity q, MayHaveUnit q) => q -> Input

-- | For building a quantity with a constraint
qwC :: (Quantity q, MayHaveUnit q) => q -> RealInterval Expr Expr -> Input
class Theory t
valid_context :: Theory t => Lens' t [TheoryModel]
spaces :: Theory t => Lens' t [SpaceDefn]
quantities :: Theory t => Lens' t [QuantityDict]
operations :: Theory t => Lens' t [ConceptChunk]
defined_quant :: Theory t => Lens' t [QDefinition]
invariants :: Theory t => Lens' t [Relation]
defined_fun :: Theory t => Lens' t [QDefinition]
data TheoryModel
tm :: (Concept c0, Quantity q, MayHaveUnit q, Concept c1) => c0 -> [q] -> [c1] -> [QDefinition] -> [Relation] -> [QDefinition] -> [Reference] -> String -> [Sentence] -> TheoryModel
tmNoRefs :: (Concept c0, Quantity q, MayHaveUnit q, Concept c1) => c0 -> [q] -> [c1] -> [QDefinition] -> [Relation] -> [QDefinition] -> String -> [Sentence] -> TheoryModel
