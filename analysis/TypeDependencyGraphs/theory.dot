digraph alltypes {
	subgraph teoryconcepths {
	}
	subgraph clasess {
	}
	subgraph contraintsets {
		subgraph constraintset{
		ConstraintSet -> ConceptChunk;
		ConstraintSet -> NonEmptyExpr;
		ConstraintSet	[shape=oval, color=cyan3, label=ConstraintSet];
		}
	}
	subgraph datadefinition {
		subgraph datadefinition{
		DataDefinition -> QDefinition;
		DataDefinition -> ScopeType;
		DataDefinition -> Reference;
		DataDefinition -> MaybeDerivation;
		DataDefinition -> ShortName;
		DataDefinition -> String;
		DataDefinition -> Sentence;
		DataDefinition	[shape=oval, color=cyan3, label=DataDefinition];
		}
		subgraph scope{
		Scope -> UID;
		Scope	[shape=oval, color=darkgreen, label=Scope];
		}
	}
	subgraph gendefn {
		subgraph gendefn{
		GenDefn -> UID;
		GenDefn -> ModelKinds;
		GenDefn -> MaybeUnitDefn;
		GenDefn -> MaybeDerivation;
		GenDefn -> Reference;
		GenDefn -> ShortName;
		GenDefn -> String;
		GenDefn -> Sentence;
		GenDefn	[shape=oval, color=cyan3, label=GenDefn];
		}
	}
	subgraph intancemodels {
		subgraph instancemodel{
		InstanceModel -> ModelKinds;
		InstanceModel -> NP;
		InstanceModel -> Inputs;
		InstanceModel -> Output;
		InstanceModel -> Reference;
		InstanceModel -> MaybeDerivation;
		InstanceModel -> ShortName;
		InstanceModel -> String;
		InstanceModel -> Sentence;
		InstanceModel	[shape=oval, color=cyan3, label=InstanceModel];
		}
		subgraph input{
		Input -> QuantityDictMaybeRealIntervalExprExpr;
		Input	[shape=oval, color=red2, label=Input];
		}
		subgraph inputs{
		Inputs -> Input;
		Inputs	[shape=oval, color=red2, label=Inputs];
		}
		subgraph output{
		Output -> QuantityDict;
		Output	[shape=oval, color=red2, label=Output];
		}
		subgraph outputconstraints{
		OutputConstraints -> RealIntervalExprExpr;
		OutputConstraints	[shape=oval, color=red2, label=OutputConstraints];
		}
	}
	subgraph modelkinds {
		subgraph modelkinds{
		ModelKinds -> RelationConcept;
		ModelKinds -> ConstraintSet;
		ModelKinds -> QDefinition;
		ModelKinds -> MultiDefn;
		ModelKinds	[shape=oval, color=darkviolet, label=ModelKinds];
		}
	}
	subgraph multidefn {
		subgraph definingexpr{
		DefiningExpr -> UID;
		DefiningExpr -> Sentence;
		DefiningExpr -> Expr;
		DefiningExpr	[shape=oval, color=cyan3, label=DefiningExpr];
		}
		subgraph multidefn{
		MultiDefn -> UID;
		MultiDefn -> QuantityDict;
		MultiDefn -> Sentence;
		MultiDefn -> NonEmptyDefiningExpr;
		MultiDefn	[shape=oval, color=cyan3, label=MultiDefn];
		}
	}
	subgraph teoryh {
		subgraph theorymodel{
		TheoryModel -> UID;
		TheoryModel -> ConceptChunk;
		TheoryModel -> TheoryModel;
		TheoryModel -> SpaceDefn;
		TheoryModel -> QuantityDict;
		TheoryModel -> QDefinition;
		TheoryModel -> DisplayExpr;
		TheoryModel -> Reference;
		TheoryModel -> ShortName;
		TheoryModel -> String;
		TheoryModel -> Sentence;
		TheoryModel	[shape=oval, color=cyan3, label=TheoryModel];
		}
	}
	subgraph drails {
	}
}
