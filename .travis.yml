# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export HAPPYVER=1.19.5
- export ALEXVER=3.1.7
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/happy/$HAPPYVER/bin:/opt/alex/$ALEXVER/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry brew update
    brew install xz
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  case "$BUILD" in
    stack)
      travis_retry stack --no-terminal --install-ghc $ARGS test --only-dependencies
      travis_retry stack --no-terminal $ARGS build alex happy
      ;;
    cabal)
      cabal --version
      travis_retry cabal update
      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS
      ;;
  esac

script:
- |
  case "$BUILD" in
    stack)
      travis_wait 30 stack --no-terminal $ARGS test hakaru:system-testsuite --haddock --no-haddock-deps
      ;;
    cabal)
      cabal configure --enable-tests --enable-benchmarks -v2 --ghc-options="-O0" # removed -Werror
      cabal build
      cabal check || [ "$CABALVER" == "1.16" ]
      cabal test
      cabal sdist
      cabal copy
      SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz && \
        (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
      ;;
  esac

notifications:
  email:
    - szymczak@mcmaster.ca
  on_success: change
  on_failure: always
